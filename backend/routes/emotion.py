import os
import sys
import httpx
from fastapi import APIRouter, HTTPException
from pydantic import BaseModel

router = APIRouter()
class Req(BaseModel):
    text: str

# –ß–∏—Ç–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
HF_TOKEN = os.getenv("HUGGINGFACE_TOKEN")
if not HF_TOKEN:
    raise RuntimeError("–ù–µ –Ω–∞–π–¥–µ–Ω HUGGINGFACE_TOKEN –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏")

MODEL   = os.getenv("EMOTION_MODEL")
API_URL = f"https://api-inference.huggingface.co/models/{MODEL}"
HEADERS = {"Authorization": f"Bearer {HF_TOKEN}"}

# Debug-–ª–æ–≥–∏
print("üöÄ DEBUG emotion.py:", __file__, file=sys.stderr)
print("   API_URL =", API_URL, file=sys.stderr)
print("   HEADERS =", HEADERS, file=sys.stderr)

@router.post("/emotion")
async def emotion(req: Req):
    async with httpx.AsyncClient(timeout=60.0) as client:
        resp = await client.post(API_URL, headers=HEADERS, json={"inputs": req.text})
    if resp.status_code != 200:
        raise HTTPException(status_code=resp.status_code, detail=resp.text)
    return {"analysis": resp.json()}
