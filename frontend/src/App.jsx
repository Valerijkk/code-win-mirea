import React, { useState, useEffect, useRef } from 'react';
import './App.css';
import Button from './components/Button';
import Image from './components/Image';
import Otstoy from './components/Otstoy';

export default function App() {
    const [messages, setMessages] = useState([]); // { role, text }
    const [input, setInput]       = useState('');
    const [loading, setLoading]   = useState(false);
    const bottomRef = useRef(null);
    const [buttonsState, setButtonsState] = useState([false, false, false, false]);
    const [isWindowVisible, setIsWindowVisible] = useState(false);

    const toggleSideBar = () => {
        setIsWindowVisible(!isWindowVisible);
    };

    // –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª
    useEffect(() => {
        bottomRef.current?.scrollIntoView({ behavior: 'smooth' });
    }, [messages]);

    const toggleButtonState = (index) => {
        setButtonsState((prevState) => {
            const newState = [...prevState];
            newState[index] = !newState[index];
            return newState;
        });
    };

    const sendMessage = async e => {
        e.preventDefault();
        if (!input.trim()) return;

        // 1) —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ
        setMessages(ms => [...ms, { role: 'user', text: input }]);
        setLoading(true);

        try {
            // 2) POST /api/generate
            const res = await fetch('/api/generate', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ prompt: input }),
            });
            const data = await res.json();
            console.log('–ü–æ–ª—É—á–∏–ª–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞:', data);

            // 3) –µ—Å–ª–∏ –µ—Å—Ç—å think ‚Üí —Å–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º ¬´–º—ã—Å–ª—å¬ª
            if (data.think) {
                setMessages(ms => [
                    ...ms,
                    { role: 'bot-think', text: data.think }
                ]);
            }

            // 4) –ø–æ—Ç–æ–º –æ—Ç–≤–µ—Ç
            setMessages(ms => [
                ...ms,
                { role: 'bot', text: data.response }
            ]);
        } catch (err) {
            setMessages(ms => [
                ...ms,
                { role: 'bot', text: `–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: ${err.message}` }
            ]);
        } finally {
            setInput('');
            setLoading(false);
        }
    };

    return (
        <div class="w-screen h-screen bg-neutral-800 flex lg:text-xs xl:text-sm 2xl:text-base">
            {isWindowVisible &&  (
                <div class="w-3/19 h-screen bg-neutral-900 flex flex-col justify-between text-neutral-400 font-semibold"> {/* —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é */}
                    <div class="h-1/9 w-full flex justify-between">
                        <div class="w-6/9 flex flex-col justify-center"> {/* –Ω–∞–∑–≤–∞–Ω–∏–µ */}
                            <div class="h-1/2 w-full text-center ms:text-base md:text-lg lg:text-xl xl:text-2xl 2xl:text-3xl">
                                –∫–∏—Ç—ë–Ω–æ–∫
                            </div>
                        </div>

                        <Otstoy help="—Å–≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é" image="‚û§" onClick={toggleSideBar}/> {/* —Å–≤—ë—Ä—Ç–æ–≤–∞–Ω–∏–µ */}
                    </div>

                    <div class="h-1/17 w-5/9 flex justify-center">
                        <button class="w-13/16 bg-blue-600 rounded-2xl flex flex-col justify-center">  {/* –Ω–æ–≤—ã–π —á–∞—Ç */}
                            <div class="h-1/2 flex justify-center">
                                <image class="w-1/5 bg-white">

                                </image>
                                <div class="pt-1 w-13/20 text-white xl:text-xs 2xl:text-sm text-right">
                                    –ù–æ–≤—ã–π —á–∞—Ç
                                </div>
                            </div>
                        </button>
                    </div>

                    <div class="h-full w-full">  {/* –∑–∞–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–¥ —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ */}

                    </div>

                    <div class="h-1/12 w-full flex flex-col justify-center"> {/* –ø—Ä–æ—Ñ–∏–ª—å */}
                        <div class="h-1/2 flex justify-center">
                            <div class="w-1/8 rounded-full">
                                <image class="text-neutral-300 ms:text-base md:text-lg lg:text-xl xl:text-2xl 2xl:text-3xl">
                                    ‚òª
                                </image>
                            </div>

                            <div class="pl-2 pt-2 w-17/24 xl:text-xs 2xl:text-sm">
                                –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
                            </div>
                        </div>
                    </div>
                </div>
            )}

            {!isWindowVisible &&  (
                <div class="w-1/27 h-screen bg-neutral-900 flex flex-col justify-between"> {/* —Å–∂–∞—Ç–æ–µ –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é */}
                    <div class="h-1/2"> {/* –≤–≤–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å */}
                        <div class="h-1/6 flex justify-center"> {/* –ª–æ–≥–æ */}
                            <div class="w-2/3 flex flex-col justify-center">
                                <button class="h-1/2 text-center ms:text-lg md:text-xl lg:text-2xl xl:text-3xl 2xl:text-4xl">
                                    <image>
                                        üêã {/* –∫–∏—Ç, –ø—Ä–æ—Å—Ç–æ –∫–∏—Ç, –¥—É–º–∞–µ—Ç, —á—Ç–æ –∫—Ä—É—Ç–æ–π, –Ω–æ –Ω–∞ –¥–µ–ª–µ –≤—Å—ë —Å–æ–≤—Å–µ–º –Ω–µ —Ç–∞–∫, —ç—Ç–æ —è –µ–≥–æ —Å—é–¥–∞ –∑–∞—Å—É–Ω—É–ª, —è –¥–ª—è –Ω–µ–≥–æ –±–æ–≥, –µ—Å–ª–∏ –∑–∞—Ö–æ—á—É, —Ç–æ –µ–≥–æ —Ç—É—Ç –Ω–µ –±—É–¥–µ—Ç, –Ω–æ –æ–Ω –º–∏–ª–∏, —Ç–∞–∫ —á—Ç–æ —è –µ–≥–æ –ø–æ–∫–∞ —á—Ç–æ –æ—Å—Ç–∞–≤–ª—é, –Ω–æ –Ω–µ –¥–∞–π –±–æ–≥ –æ–Ω —á—Ç–æ-–ª–∏–±–æ –Ω–∞—Ç–≤–æ—Ä–∏—Ç */}
                                    </image>
                                </button>
                            </div>
                        </div>

                        <Image help="—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é" image="‚û§" onClick={toggleSideBar}/> {/* —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ */}

                        {/*<Image help="–¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç" image=""/> {/* –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞ */}
                    </div>

                    <div class="h-1/2 flex flex-col justify-end"> {/* –Ω–∏–∂–Ω—è—è —á–∞—Å—Ç—å */}
                        <Image help="–æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å" image="‚òª"/> {/* –∞–∫–∫–∞—É–Ω—Ç –∏ –≤—Å—ë —Ç–∞–∫–æ–µ */}
                    </div>
                </div>
            )}

            <div class="w-full h-full flex justify-center"> {/* –æ—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω */}
                <div class="w-12/28">
                    <div class="h-2/28 flex flex-col justify-center"> {/* –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
                        <div class="text-center text-white font-semibold">
                            Greeting and Offering Assistance
                        </div>
                    </div>

                    <div class="h-21/28"> {/* —á–∞—Ç */} 
                        {messages.map((m, i) => (
                            <div key={i} className={`message ${m.role}`}>
                                {m.text}
                            </div>
                        ))}
                        <div ref={bottomRef}/>
                    </div>

                    <div class="h-5/28 flex flex-col justify-center"> {/* –æ–∫–Ω–æ –≤–≤–æ–¥–∞ –∏ –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ */}
                        <div class="h-5/8 bg-neutral-700 rounded-3xl flex justify-center">
                            <div class="w-27/28 flex flex-col justify-center">
                                <form class="h-22/28 flex flex-col justify-between" onSubmit={sendMessage}>
                                    <input class="w-full h-1/3 text-neutral-200" // –æ–∫–Ω–æ –≤–≤–æ–¥–∞
                                        type="text"
                                        placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                                        value={input}
                                        onChange={e => setInput(e.target.value)}
                                        disabled={loading}
                                    />

                                    <div class="h-1/3 flex justify-between"> {/* –æ–ø—Ü–∏–∏ */}
                                        <div> {/* –ª–µ–≤–∞—è —á–∞—Å—Ç—å */} 
                                            <Button text="–∞–Ω–∞–ª–∏–∑" help="–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞" image="" index={0} isActive={buttonsState[0]} toggleState={toggleButtonState}/> {/* —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ */}

                                            <Button text="—Ç–µ–∫—Å—Ç" help="—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ –≤–≤–µ–¥—ë–Ω–æ–º—É" image="" index={1} isActive={buttonsState[1]} toggleState={toggleButtonState}/> {/* –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ */}

                                            <Button text="–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" help="—Å–æ–∑–¥–∞—Å—Ç –∫–∞—Ä—Ç–∏–Ω—É –ø–æ —Ç–µ–∫—Å—Ç—É" image="" index={2} isActive={buttonsState[2]} toggleState={toggleButtonState}/> {/* –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}

                                            <Button text="–º—É–∑—ã–∫–∞" help="–Ω–∞–ø–∏—à–µ—Ç –ø–µ—Å–Ω—é –ø–æ –≤–≤–µ–¥—ë–Ω–æ–º—É" image="" index={3} isActive={buttonsState[3]} toggleState={toggleButtonState}/> {/* –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º—É–∑—ã–∫–∏ */}
                                        </div>

                                        <div class="w-2/20 flex justify-end"> {/* –ø—Ä–∞–≤–∞—è —á–∞—Å—Ç—å */}
                                            <button class="w-2/5 h-full bg-neutral-500 rounded-full text-center ms:text-sm md:text-base lg:text-lg xl:text-xl 2xl:text-2xl leading-1 text-neutral-700" type="submit" disabled={loading || !input.trim()}> {/* –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å */}
                                                {loading ? '‚Ä¶' : '‚Üë'} {/* –≤ –º–∞—Å—Å–∏–≤–µ buttonsState —Ö—Ä–∞–Ω—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ, –∫–∞–∫–∏–µ –æ–ø—Ü–∏–∏ –≤—ã–±—Ä–∞–Ω—ã */}
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}
